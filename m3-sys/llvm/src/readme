
This is a translator of modula3 intermediat to llvm code. To use it you need llvm installed. You can install from a package or build from source. Probably best if you build from source since there are a couple of additions to the llvm that
have been done which havent made it back to llvm people. These are mainly to do with atomics and intrinsics. I will provide these changes to interested developers as requested.

Also I have found it useful to use the release version of llvm since a version with asserts will crash the generator most likely. Also if there is a type error in your generated code there is not much info where that error occurred. Running llc on the output is much more helpful.

The translator produces runnable code on AMD_64 under linux no other platforms have been tested.

This should be added as another backend to the m3 tool chain. Currently I am testing it by first running m3cgcat on test code generated by cm3 then running llc then assembling then custom linking. 

Issues
  The nested procedure support is missing. llvm provide a trampoline instrinsic which probably could be used. How exactly is beyond me at the moment.
  The runtime linker crashes on some modules.
  The div instruction is producing bad results for negative numbers.
  The end_init procedure is causing an assert in removing the temporary global
  Load and store procedure could be cleaned up they look messy and are probably wrong for some types.
  Metadata is half working and we need it for debugging support to be added.
  Lots of others.
